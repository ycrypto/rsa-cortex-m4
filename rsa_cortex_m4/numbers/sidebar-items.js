initSidebarItems({"struct":[["Array","Array of [`Unsigned`]."],["BigEndian","Representation of [`Unsigned`] as big-endian bytes."],["Convenient","Unsigned numbers with both their top and bottom bits set – highly convenient for modular arithmetic!"],["Odd",""],["Prime","Prime number (passing primality tests); convenient by definition."],["Unsigned","Multi-precision unsigned integer with at most $D + E$ digits (places) – two [`Limb`]s."]],"trait":[["Bits","The unstable `{number}::BITS` implementations."],["Number","Something similar to a `Vec<u32>`, without allocations."],["NumberMut","Mutable access to a [`Number`]."]],"type":[["Limb","Several [`Digit`]s attach to a limb."],["Long","[`Unsigned`] with equal limbs (e.g., public key). If only we had `[T; 2*D]`..."],["Product","Big enough to fit the product of two [`Unsigned`]."],["Short","[`Unsigned`] with only one limb (e.g., private prime). Short only in comparison to [`Long`]."]]});